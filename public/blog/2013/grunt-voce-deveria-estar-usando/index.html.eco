---
title: "Otimize suas tarefas com o Grunt!"
datePost: 04/06/2013
layout: "post"
relativeOutDirPath: 'posts'
path: "../../../"
pathBlog: "../../"
---

<p class="lead">Pense nas atividades que você faz (ou deveria fazer) no momento que vai colocar o projeto no ar.</p>

<p>Provavelmente você minifica e concatena o CSS e o Javascript. Talvez também minifique o HTML e otimiza as imagens. Esse fluxo acontece
várias vezes, e você usa diversos programas para ajudar nessas tarefas. E isso é bem chato não é?</p>

<p>E ai que entra o <a href="http://gruntjs.com/">Grunt</a>...</p>

<p>O <a href="http://gruntjs.com/">Grunt</a> automatiza todas essas tarefas. E mais... você pode customiza-lo literalmente da maneira que achar melhor.</p>

<p>Ao contrário do meu <a href="../primeiros-passos-com-o-docpad/">último post</a> sobre o <a href="http://docpad.org/">Docpad</a>. Não vou me estender no tutorial básico. Gente gabaritada já fez tutoriais, a maioria em inglês, mas o pessoal do <a href="http://www.voltsdigital.com.br/">Volts Digital</a> fez um <a href="http://www.voltsdigital.com.br/labs/gruntjs-por-onde-comecar/">tutorial</a> ótimo para quem está interessado em começar a brincar.</p>

<p>Dessa vez vou explicar as tarefas que atualmente estou utilizando para automatizar meu trabalho.</p>

<h3>O projeto</h3>

<p>Como sempre, deixei a base que estou utilizando no <a href="https://github.com/LFeh/Grunt-Base">Github</a>, forka lá se quiser usar.</p>

<h3>As tarefas</h3>

<h4><a href="https://github.com/gruntjs/grunt-contrib-clean">Clean</a></h4>

<code class="space">  	
	<pre>
	clean: {
	  dist: {
	    src: ["dist/"]
	  }
	},</pre>
</code>

<p>Limpo a pasta de distribuição.</p>

<h4><a href="https://github.com/gruntjs/grunt-contrib-copy">Copy</a></h4>

<code class="space">  	
	<pre>
 	copy: {
	  	dist: {
		    files: [
		      	{
		      		expand: true, 
		      		cwd: 'dev/',
		      		src: [
			      		'**',
			      		'*.{md,txt,htaccess}',
			      		'!assets/css/less/**',
			      		'!assets/js/site/**'
		      		], 
		      		dest: 'dist/',
		      		dot: true
		      	} 
		    ]
	  	}
	}, </pre>
</code>

<p>Copio os arquivos necessários para rodar o projeto para a pasta de distribuição, observem que excluo <code>!</code> alguns arquivos (less, plugins, etc...) pois são desnecessários na versão final, já que ficarão concatenados e minificados depois.</p>

<h4><a href="https://github.com/gruntjs/grunt-contrib-uglify">Uglify</a></h4>

<code class="space">  	
	<pre>
 	uglify: {  
		options: {
			mangle : false 
		},                               
	    dist: {   
			files : {
				'dist/assets/js/scripts.min.js' : [ 

				]
			}
		},                        
	    dev: {   
			options: {
				beautify : true 
			},   
			files : {
				'dev/assets/js/scripts.min.js' : [ 

				]
			}
		}
    },</pre>
</code>

<p>Aqui concateno/minifico os scripts. Reparem que crio duas versões, <strong>dist</strong> e <strong>dev</strong>, isso porque na versão de 
desenvolvimento deixo o debug ativado através da opção <code>beautify</code>. Adiciono todos os plugins que vou usar no projeto.</p>

<h4><a href="https://github.com/gruntjs/grunt-contrib-less">Less</a></h4>

<code class="space">  	
	<pre>
	less: {
	  dist: {
	    options: {
	      paths: ["dev/assets/css/less"],
	      yuicompress: true,
	      compress: true
	    },
	    files: {
	      "dist/assets/css/style.css": "dev/assets/css/less/style.less"
	    }
	  },
	  dev: {
	    options: {
	      paths: ["dev/assets/css/less"]
	    },
	    files: {
	      "dev/assets/css/style.css": "dev/assets/css/less/style.less"
	    }
	  }
	},</pre>
</code>

<p>Transformo os arquivos LESS em CSS. O mesmo caso da tarefa anterior, crio duas versões, pois na versão <strong>dev</strong> não minifico o CSS. Reparem que aponto para o <strong>style.less</strong>, porque é nele que chamo todos os componentes.</p>

<h4><a href="https://github.com/gruntjs/grunt-contrib-htmlmin">HTMLMin</a></h4>

<code class="space">  	
	<pre>
	htmlmin: {                                     
	    dist: {                                       
	      options: {                                  
	        removeComments: true,
	        collapseWhitespace: true
	      },
	      files: [{
	          expand: true,      
	          cwd: 'dev/',       
	          src: '*.html',  
	          dest: 'dist/',    
	      }],
	    }
  	},</pre>
</code>

<p>Minifico o HTML.</p>
 
<h4><a href="https://github.com/gruntjs/grunt-contrib-imagemin">ImageMin</a></h4>

<code class="space">  	
	<pre>
	imagemin: {                           
	    dist: {                            
	      options: {                       
	        optimizationLevel: 3
	      },
	      files: [{
	          expand: true,      
	          cwd: 'dev/',       
	          src: ['**/*.png', '**/*.jpg', '**/*.jpeg', '**/*.gif'],   
	          dest: 'dist/',    
	      }],
	    }
	},</pre>
</code>

<p>Um dos plugins mais interessantes. Aqui comprimimos as imagens, sem perder qualidade. Fundamental para qualquer projeto.</p>

<h4><a href="https://github.com/gruntjs/grunt-contrib-watch">Watch</a></h4>

<code class="space">  	
	<pre>
   	watch: {
		dev : {
			files : [
				'dev/**/*.{less,js}',
				'Gruntfile.js'
			],
			tasks : [ 'uglify:dev', 'less:dev']
		}
	}</pre>
</code>

<p>Pedimos para o Grunt "olhar" as modificações e iniciar determinada tarefa. No caso peço para ele observar qualquer alteração nos arquivos .less, .js e no arquivo base do Grunt. Dessa forma ele realiza as tarefas em tempo real.</p>

<h4>Comandos para executar</h4>

<code class="space">  	
	<pre>
	// Dev
	grunt.registerTask( 'dev', ['uglify:dev', 'less:dev'] );

	// Build
	grunt.registerTask( 'build', [ 'clean', 'copy:dist', 
	'uglify:dist', 'htmlmin:dist', 'imagemin:dist', 'less:dist' ] );

	// Watch
	grunt.registerTask( 'w', [ 'watch' ] );</pre>
</code>

<p>Uso <code>grunt dev</code> para compilar a versão de desenvolvimento e <code>grunt build</code> para compilar a versão de distribuição. Observem que algumas ações executo apenas na versão final. Para o Grunt "olhar" o projeto rodo <code>grunt w</code>.</p>

<h3>Conclusão</h3>

<p>Como viram, você pode adaptar o Grunt exatamente as suas necessidades.</p>

<p>É possível fazer otimizações em todos os níveis. Ou seja, você vai otimizar seu desenvolvimento e ganhar mais produtividade (afinal, não vai precisar repetir tarefas desnecessariamente) e vai otimizar o projeto em sí, já que através de um comando terá CSS, Javascript, imagens e HTML mais leves.</p>

<p>Uma tarefa, que tentei vários plugins e não consegui achar um que considero ideal é <strong>gerar sprites</strong>, sei que tem o Compass para o Grunt, mas não queria usar SASS apenas para gerar sprites. Se alguém tiver uma solução ou usa algum plugin bacana... sou todo ouvidos.</p>

<p class="end"> O objetivo desse artigo é atiçar a criatividade de quem ainda não está familiarizado com o Grunt, e não servir de tutorial. De qualquer forma, espero que tenha sido útil. É nóis.</p>

